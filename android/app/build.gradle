plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.chaquo.python'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.example.my_kia_query"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main {
            python.srcDirs = ['src/main/python']
        }
    }

    defaultConfig {
        applicationId "com.example.my_kia_query"
        // Set minimum SDK version to 23 for biometric support
        minSdkVersion Math.max(23, flutter.minSdkVersion)
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        
        // Enable backup
        resValue "bool", "BACKUP_ENABLED", "true"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

        python {
            pip {
                install "hyundai-kia-connect-api"
            }
            buildPython "/usr/bin/python3"
            version "3.9"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
        debug {
            // Enable backup for debug builds as well
            manifestPlaceholders = [BACKUP_ENABLED: true]
        }
    }

    // Add this to ensure data persistence
    aaptOptions {
        noCompress "xml"
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
